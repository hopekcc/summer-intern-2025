name: CI/CD Workflow

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/**'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Create virtualenv and install dependencies
      run: |
        cd server
        python -m venv .venvServer
        source .venvServer/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_JSON: ${{ secrets.FIREBASE_JSON }}
      run: |
        cd server
        source .venvServer/bin/activate
        echo "FIREBASE_JSON is set: " ${{ env.FIREBASE_JSON != '' }}
        if [ -d tests ]; then pytest tests/; else echo "No tests directory, skipping pytest."; fi

  deploy:
    name: Deploy to Server
    needs: test
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_ACTIONS_IP }}
        username: ${{ secrets.VM_ACTIONS_USERNAME }}
        key: ${{ secrets.VM_ACTIONS_PRIVATE_KEY }}
        script: |
          echo "ðŸš€ Starting deployment to ${{ github.event.inputs.environment || 'production' }}"
          echo "Deploying to ${{ github.event.inputs.environment || 'production' }}"
          cd ..
          cd server/
          cd summer-intern-2025/
          # Create new tmux session or use existing one
          tmux new-session -d -s server_session || true
          # Send commands to the session
          tmux send-keys -t server_session 'git pull origin main' C-m
          tmux kill-session -t server_session
          echo "Git pull and server started in tmux session 'server_session'"
          echo "âœ… Deployment completed successfully!"
          echo "ðŸ”— Application should be available at http://${{ secrets.VM_ACTIONS_IP }}:8080"
